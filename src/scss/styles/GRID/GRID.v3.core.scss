/*
* GRID 
* @version: 3.1
* @description: Lightweight Flex-Grid system
* @author: Jonas B. Ingebretsen
*/
$coord: "top", "left", "bottom", "right";
$columns: 12;
$sizes: (
	"xxs": 0rem,
	"xs": 30rem,
	"md": 40rem,
	"lg": 64rem,
);
:root {
	--gutter: 1.5rem;
	--container: 1400px;
}
.container {
	max-width: var(--container) !important;
	margin-left: auto !important;
	margin-right: auto !important;
}

.row {
	flex: 1 1 auto;
	display: flex;
	flex-wrap: wrap;
	max-width: 100%;
	&.reverse { flex-direction: row-reverse }
}

[class*="xxs-"],
[class*="xs-"],
[class*="md-"],
[class*="lg-"],
[class="xxs"],
[class="xs"],
[class="md"],
[class="lg"] {
	--calc-width: calc(var(--width) / 12 * 100%);
	display: flex;
	padding-right: calc(var(--gutter) * 0.5);
	padding-left: calc(var(--gutter) * 0.5);
	flex: 0 0 var(--calc-width);
	flex-wrap: wrap;
	.row {
		padding-right: calc(var(--gutter) * 0);
		padding-left: calc(var(--gutter) * 0);
	}

	@each $name, $size in $sizes {
		@media only screen and (min-width: #{$size}) {

			.#{$name}-start     { justify-content: flex-start }
			.#{$name}-center    { justify-content: center }
			.#{$name}-end       { justify-content: flex-end }
			.#{$name}-top       { align-items: flex-start }
			.#{$name}-middle    { align-items: center }
			.#{$name}-bottom    { align-items: flex-end }
			.#{$name}-around    { justify-content: space-around }
			.#{$name}-between   { justify-content: space-between }
			.#{$name}-first     { order: -1 }
			.#{$name}-last      { order: #{($columns * 2) + 1} }
			.#{$name}-stretch   { align-content: stretch }

			@for $i from 1 through $columns {
				@if $i == 1 {
					&.#{$name} { flex: 0 0 auto }
				}
				&.#{$name}-#{$i} { --width: #{$i} }
			}
			@for $i from 0 through ($columns * 2) {
				&.#{$name}-sort-#{$i} { order: #{$i} }
			}
			@each $dir in $coord {
				@for $k from 0 through $columns {
					.#{$name}-margin-#{$dir}-#{$k} {
						margin-#{$dir}: calc(var(--gutter) * #{$k}) !important
					}
					.#{$name}-margin-#{$k} {
						margin: calc(var(--gutter) * #{$k}) !important
					}
					.#{$name}-padding-#{$dir}-#{$k} {
						padding-#{$dir}: calc(var(--gutter) * #{$k}) !important
					}
					.#{$name}-padding-#{$k} {
						padding: calc(var(--gutter) * #{$k}) !important
					}
				}
			}
		}
	}
}
@for $k from 0 through $columns {
	.margin-#{$k}   { margin: calc(var(--gutter) * #{$k}) !important }
	.padding-#{$k}  { padding: calc(var(--gutter) * #{$k}) !important }
}
@each $dir in $coord {
	@for $k from 0 through $columns {
		.margin-#{$dir}-#{$k}   { margin-#{$dir}: calc(var(--gutter) * #{$k}) !important }
		.padding-#{$dir}-#{$k}  { padding-#{$dir}: calc(var(--gutter) * #{$k}) !important }
	}
}